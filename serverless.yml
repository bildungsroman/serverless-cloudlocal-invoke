service: serverless-cloudlocal-invoke
frameworkVersion: '>=1.2.0 <2.0.0'
provider:
  name: aws
  runtime: nodejs8.10
  profile: test
plugins:
  - serverless-iam-roles-per-function
  - serverless-cf-vars
functions:
  writeItems:
    handler: index.handler
    description: !Sub
      - 'Stack #{StackTagName} Environment #{EnvironmentTagName} Function #{ResourceName}'
      - ResourceName: writeItems
    runtime: nodejs8.10
    tracing: Active
    iamRoleStatements:
      - Effect: Allow
        Action:
          - xray:PutTraceSegments
          - xray:PutTelemetryRecords
          - xray:GetSamplingRules
          - xray:GetSamplingTargets
          - xray:GetSamplingStatisticSummaries
        Resource: '*'
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:DeleteItem
          - dynamodb:PutItem
          - dynamodb:Scan
          - dynamodb:Query
          - dynamodb:UpdateItem
          - dynamodb:BatchWriteItem
          - dynamodb:BatchGetItem
        Resource:
          - !GetAtt Items.Arn
          - !Sub '#{Items.Arn}/index/*'
    environment:
      TABLE_NAME: !Ref Items
      TABLE_ARN: !GetAtt Items.Arn
resources:
  Parameters:
    StackTagName:
      Type: String
      Description: Stack Name (injected by Stackery at deployment time)
      Default: serverless-cloudlocal-invoke
    EnvironmentTagName:
      Type: String
      Description: Environment Name (injected by Stackery at deployment time)
      Default: dev
  Resources:
    Items:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        TableName: !Sub '#{AWS::StackName}-Items'